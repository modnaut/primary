<project name="primary" default="" basedir=".">
	<!-- ===================== Property Definitions =========================== -->
	<property file="build-local.properties"/>
	<property file="${basedir}/build.properties"/>
	<!-- ==================== Compilation Classpath =========================== -->
	<path id="compile.classpath">
		<fileset dir="${catalina.home}/bin">
			<include name="*.jar"/>
		</fileset>
		<pathelement location="${catalina.home}/lib"/>
		<fileset dir="${catalina.home}/lib">
			<include name="*.jar"/>
		</fileset>
		<pathelement location="${basedir}/web/WEB-INF/lib"/>
		<fileset dir="${basedir}/web/WEB-INF/lib">
			<include name="*.jar"/>
		</fileset>
	</path>
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="compile.classpath"/>
	<taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask" classpathref="compile.classpath"/>
	<property name="database.url" value="jdbc:mysql://localhost:3306/"/>
	<property name="database.userid" value="modnaut00"/>
	<property name="database.password" value="zp4X263tTSv06On"/>
	<condition property="isMacOS">
	    <os family="mac"/>
	</condition>
	<if>
		<equals arg1="${isMacOS}" arg2="true"/>
		<then>
			<property name="sencha.dir" value="${basedir}/resources/senchacmd"/>	
		</then>
		<else>
			<property name="sencha.dir" value="${basedir}/resources/senchacmdmac"/>
		</else>
	</if>
	<property name="extjs.dir" value="${basedir}/web/static/extjs"/>
	<property name="ruby.dir" value="${basedir}/resources/ruby/bin"/>
	<target name="generate-classes" description="Generates all dynamic Java classes">
		<antcall target="generate-sqlquery-classes"/>
		<antcall target="generate-view-classes"/>
	</target>
	<target name="generate-sqlquery-classes">
		<xjc removeOldOutput="yes" schema="web/WEB-INF/xsd/SqlMetaData.xsd" destdir="src" package="com.modnaut.framework.properties.sqlmetadata"/>
	</target>
	<target name="generate-view-classes">
		<delete file="web/WEB-INF/xsd/String.episode"/>
		<xjc removeOldOutput="yes" schema="web/WEB-INF/xsd/String.xsd" destdir="src" package="com.modnaut.framework.properties.string">
			<arg value="-extension"/>
			<arg value="-episode"/>
			<arg value="web/WEB-INF/xsd/String.episode"/>
		</xjc>
		<xjc removeOldOutput="yes" schema="web/WEB-INF/xsd/Application.xsd" destdir="src" package="com.modnaut.framework.properties.application">
			<arg value="-extension"/>
			<arg value="-b"/>
			<arg value="web/WEB-INF/xsd/String.episode"/>
		</xjc>
		<xjc removeOldOutput="yes" schema="web/WEB-INF/xsd/ViewMetaData.xsd" destdir="src" package="com.modnaut.framework.properties.viewmetadata">
			<arg value="-extension"/>
			<arg value="-b"/>
			<arg value="web/WEB-INF/xsd/String.episode"/>
		</xjc>
		<delete file="web/WEB-INF/xsd/String.episode"/>
	</target>
	<target name="mysql" description="Regenerates entire MySQL structure from file">
		<antcall target="generate-mysql-structure"/>
		<antcall target="generate-mysql-procedures"/>
	</target>
	<target name="generate-mysql-structure">
		<!--deletes and rebuilds mysql database structure-->
		<sql driver="com.mysql.jdbc.Driver" url="${database.url}" userid="${database.userid}" password="${database.password}">
			<transaction src="sql/modnaut-database.sql"/>
		</sql>
	</target>
	<target name="generate-mysql-procedures">
		<!--Runs mysql procedures.  Seperate so that we can define a row delimeter without changing modnaut-database.sql-->
		<sql driver="com.mysql.jdbc.Driver" url="${database.url}" userid="${database.userid}" password="${database.password}" delimiterType="row">
			<transaction src="sql/up_AuthenticateNinja.sql"/>
			<transaction src="sql/up_GetNinjaSession.sql"/>
			<transaction src="sql/up_InsertUpdateSession.sql"/>
			<transaction src="sql/up_GetAllServerAttributes.sql"/>
			<transaction src="sql/uf_NinjaHasPower.sql"/>
			<transaction src="sql/up_NinjaHasPower.sql"/>
			<transaction src="sql/up_NinjaHasPowers.sql"/>
			<transaction src="sql/uf_IsNumeric.sql"/>
			<transaction src="sql/uf_IsInteger.sql"/>
			<transaction src="sql/up_ParseCommaDelimited.sql"/>
			<transaction src="sql/up_GetMultipleStringsForLanguage.sql"/>
		</sql>
	</target>
	<target name="build-all-extjs-packages" description="Builds all ExtJS theme packages">
		<antcall target="build-extjs-package">
			<param name="package.name" value="ext-theme-access"/>
		</antcall>
		<antcall target="build-extjs-package">
			<param name="package.name" value="ext-theme-classic"/>
		</antcall>
		<antcall target="build-extjs-package">
			<param name="package.name" value="ext-theme-classic-sandbox"/>
		</antcall>
		<antcall target="build-extjs-package">
			<param name="package.name" value="ext-theme-gray"/>
		</antcall>
		<antcall target="build-extjs-package">
			<param name="package.name" value="ext-theme-neptune"/>
		</antcall>
	</target>
	<target name="build-extjs-package">
		<echo message="Building ExtJS Package ${package.name}"/>
		<if>
			<equals arg1="${isMacOS}" arg2="true"/>
			<then>
				<echo message="Building for mac"/>
				<exec dir="${extjs.dir}/packages/${package.name}" executable="${sencha.dir}/sencha" failonerror="false" >
					<arg value="--quiet"/>
					<arg value="package"/>
					<arg value="build"/>
				</exec>
			</then>
			<else>
				<echo message="Building for Windows"/>
				<property environment="env"/>
				<exec dir="${extjs.dir}/packages/${package.name}" executable="${sencha.dir}/sencha.exe" failonerror="false">
					<env key="PATH" path="${env.Path}${ruby.dir}"/>
					<arg value="--quiet"/>
					<arg value="package"/>
					<arg value="build"/>
				</exec>
			</else>
		</if>
		<delete dir="${extjs.dir}/resources/${package.name}"/>
		<move todir="${extjs.dir}/resources/${package.name}">
			<fileset dir="${extjs.dir}/packages/${package.name}/build/resources"/>
		</move>
		<delete dir="${extjs.dir}/packages/${package.name}/build"/>
		<delete dir="${extjs.dir}/.build"/>
	</target>
</project>
